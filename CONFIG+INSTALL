You will need several packages to build the IcomGateway gateway. You will probably
already have all or most of these but it still doesn't hurt to be sure:

sudo apt update
sudo apt upgrade
sudo apt install make g++ unzip git wget curl

One package you probably don't have, but will need:
sudo apt install libsqlite3-dev

git clone git://github.com/n7tae/IcomGateway.git

This will create a IcomGateway directory with everything you need to build your
Gateway system.

The first thing to do is change to the build directory with "cd IcomGateway" and then
define and create your configuration file, qn.cfg:

./config

This will start a menu driven script. In this mode, only the most common, useful
parameters are available. If you want access to absolutely every parameter use:

./config expert

Please be sure you know what you are doing if you change these normally hidden parameters.
The configuration script will show you the default value for a parameter. For most cases
the default value is fine, so your qn.cfg file will usually be rather small.

At a minimum, you need to specify an IRCDDB login (please use your legal callsign) and
at least one module. By convention, specify a 23cm module on A, a 70cm module on B and
a 2M module on C. IcomGateway supports a maximum of three modules. The 23cm data module
is not currently supported.

Also be sure to visit the "Icom Stack Menu" and make sure the local and stack IP
addresses are correct. A local address of "any" mean that your system will bind to
0.0.0.0 and accept UDP port 20000 traffic from any network. If you need to, you can
change this to the specific address at which the computer that IcomGateway is running.
A stack address of 172.16.0.1 is the default Icom address. If you system is different,
you may need to change this. In the expert menu, you can also change the port number, but
this is NOT recommended.

The configure script will show you the default values of every parameter the
IcomGateway programs use. In most cases, the defaults are just fine and you don't
need to override them with your own values. If you need to override the default value,
the general method is to type the key followed by the new value. If you want to delete
an overridden value, type a "u" followed by the key you want to unset. Boolean values
(true or false) can be toggled by just entering the key.

By default, IcomGateway will only connect to the IPv4 QuadNet server at ircv4.openquad.net.
IcomGateway is capabile of dual-stack operation and can also connect to the IPv6 server
at ircv6.openquad.net. If you want to operate in dual stack mode, enter the IRC sub-menu
and set ha to "ircv6.openquad.net" and hb to "ircv4.openquad.net".

Once your operating in dual-stack mode, any routing will prefer an IPv6 address, if
available. It's that easy.

Please note that when you select modules, you can specify your TX/RX frequencies
but that does not actually set the module frequencies. You must set frequencies
using your Icom based software. Specifying frequencies here will ensure that your
repeater shows up in both the openquad.net gateways list and APRS with the correct
information.

If you want to use the closed-source, legacy D-Plus reflectors and repeaters, you
need to make sure you are authorized to use those systems. They require that you
are a registered user, see www.dstargateway.org for more information. If you are
a registered user, you can enable IcomGateway to used this closed-source system
by DPlus. By default, when QnetLink registers your callsign you will download
both repeaters and reflectors. You can control this with configuration parameters.
You can also control the priority of D-Plus reflectors and repeaters. By default,
QnetLink first loads the gwys.txt file first and then the systems delivered by the
D-Plus Authorization system. You can change the order, if you want definitions
in your gwys.txt file to override any delivered by the D-Plus authorization server.

The information downloaded from the DPlus server is dynamic and will change
from hour to hour. You can update QnetLink by sending "       F" to your system.
This will purge the current table and re-authorize with the DPlus server and
then reload gwys.txt.

Because of the way DPlus authorization works, QnetLink can't actually confirm
that your authorization was successful. If your system is unlinked after trying
to transmit into a DPlus system, it means that your authorization was
unsuccessful. This might indicate that their may be a problem with your
DPlus registration.

If you want to see what's going on inside the programs, there are logging options
available that will cause a lot more log entries. These extra entries can be
useful if you are trying to track down problems with your system.

After you are happy with your configuration, be sure to write it out with the 'w'
key in the main menu. It will show you your qn.cfg file after it writes it out.
After you install and try out your system, you may find that you need to change
some configuration values. In that case just start the configure script again.
It will read the current qn.cfg file when it start and initialize the menus
accordingly.

Once you have your qn.cfg file, your ready to compile and install your system, type:

./admin

The first thing you want to do is to create your gwys.txt file. use the 'gw' key
to get into that sub-menu. There are several choices to initialize your gwys.txt
file. Choose one and then you can edit the file to your satisfaction.

If you create a My_Hosts.txt file, it will automatically be appended to the end of
your gwys.txt file. Because it is at the end, definitions in My_Hosts.txt will
override anything defined before. The format for this file is just like gwys.txt:

# comments can begin with a hash mark
# and then: gateway ip_address port
# choose port for linking family (must be supported by the gateway):
#   20001 for DPlus 30001 for DExtra 30051 for DCS.
# Here comes a bogus definition, with the proper format:
Q0XYZ 44.44.44.44 20001

Now, you can compile and install your system with the 'is' key. qnadmin will
use your qn.cfg file to figure out what needs to be compiled and how it is to
be installed.

If you plan on using DTMF, use the 'id' key to install it. Once you install
something, the qnadmin will dynamically change and show you how to uninstall the
installed items.

The maintenance sub-menu accessed with the 'm' key will let you stop and start
different programs in your installed package. Note that this just uses
systemctl to start and stop a service. It will not uninstall the service.
You might want to do this if you have changed your configuration file.

The log sub-menu accessed with the 'l' key can be use to put a "tail" on different
log files and you can watch a log file in real-time.

Tom Early, n7tae (at) arrl (dot) net
